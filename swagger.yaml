---
swagger: "2.0"
info:
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  title: Bank Argent API documentation
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
- http
paths:
  /user/login:
    post:
      tags:
      - User Module
      summary: Login
      description: API for Login
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Login Payload
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
      - User Module
      summary: Signup
      description: API for Signup
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Signup Payload
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      tags:
      - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      tags:
      - User Module
      summary: User Profile API
      description: API for updating a user profile
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        description: Attach Bearer JWT token
        required: true
        type: string
      - in: body
        name: body
        description: Update user profile attributes
        required: true
        schema:
          $ref: '#/definitions/UserProfile'
      security:
      - Bearer: []
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /accounts:
    post:
      tags:
      - Account Module
      summary: Get Account by Users
      description: API for Accounts
      produces:
      - application/json
      parameters: []
      security:
      - Bearer: []
      responses:
        "200":
          description: Accounts Fetched
          schema:
            $ref: '#/definitions/AccountsResp'
        "400":
          description: Bad REquest
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /accounts/{accountId}:
    post:
      tags:
      - Account Module
      summary: Get Account by Id and Related Transactions
      description: Fetch account by ID
      produces:
      - application/json
      parameters:
      - name: accountId
        in: path
        description: Account Id to fetch
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: Account Fetched
          schema:
            $ref: '#/definitions/AccountResp'
        "400":
          description: Accounts not found
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    post:
      tags:
      - Account Module
      summary: Fetch account TRansaction by Month
      description: Get Transaction for a specifique account for the selected month
      produces:
      - application/json
      parameters:
      - name: accountId
        in: path
        description: Account Id to fetch
        required: true
        type: string
      - name: month
        in: query
        description: Month to filter
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: Transactions retrived successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        "400":
          description: No Account corresponding
        "500":
          description: Internal Server Error
  /accounts/{accountId}/transactions/{transactionId}:
    post:
      tags:
      - Account Module
      summary: Get Account Specific Transaction
      description: Retrieve specific transaction from an acccount by its ID
      produces:
      - application/json
      parameters:
      - name: accountId
        in: path
        description: Account Id to fetch
        required: true
        type: string
      - name: transactionId
        in: path
        description: ID of the transaction to retrieve
        required: true
        type: string
      security:
      - Bearer: []
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Request Unauthorized
        "404":
          description: Not Found
        "500":
          description: Server Error
    put:
      tags:
      - Account Module
      summary: Modify Specific Transaction Details
      description: Modify specific transaction Type and Note details
      produces:
      - application/json
      parameters:
      - name: accountId
        in: path
        description: Account Id to fetch
        required: true
        type: string
      - name: transactionId
        in: path
        description: ID of the transaction to retrieve
        required: true
        type: string
      - in: body
        name: note
        description: Update specific transaction Type and Note details
        required: true
        schema:
          $ref: '#/definitions/UpdateDetails'
      security:
      - Bearer: []
      responses:
        "200":
          description: Transaction's note modified successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Request Unauthorized
        "404":
          description: Not Found
        "500":
          description: Server Error
  /categories:
    get:
      tags:
      - Account Module
      summary: Get All Transaction Types
      description: Return all available transaction types
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Returns an array of all categories
          schema:
            $ref: '#/definitions/TransactionTypes'
        "400":
          description: Bad Request
        "500":
          description: Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  AccountResp:
    type: object
    properties:
      account:
        $ref: '#/definitions/Account'
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  AccountsResp:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/Account'
  Account:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      amount:
        type: string
      description:
        type: string
  TransactionsResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  TransactionResponse:
    $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      category:
        type: string
      note:
        type: string
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: '#/definitions/ApiResponse_body'
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  UpdateDetails:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  TransactionTypes:
    type: array
    items:
      $ref: '#/definitions/TransactionTypes_inner'
  ApiResponse_body:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
  TransactionTypes_inner:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
parameters:
  AccountParam:
    name: accountId
    in: path
    description: Account Id to fetch
    required: true
    type: string